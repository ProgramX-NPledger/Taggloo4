# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Deploy to Taggloo.im

concurrency: 
  group: main
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - release/taggloo_im
  workflow_dispatch:
  
jobs:
  Build:
    permissions: write-all
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        dotnet-version: ['8.0.x']
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}
#    - name: Display checkout information
#      run: |
#        echo "Repository: ${{ steps.checkout.outputs.repository }}"
#        echo "Ref: ${{ steps.checkout.outputs.ref }}"
#        echo "SHA: ${{ steps.checkout.outputs.sha }}"
#    - name: Display checked out files
#      run: |
#        echo "Checked out files:"
#        find . -type f
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test 
      run: dotnet test --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results-${{ matrix.dotnet-version }}
        path: TestResults-${{ matrix.dotnet-version }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Publish Release build
      run: dotnet publish -c Release -o ../dotnet-webapp -r linux-x64 --self-contained true /p:UseAppHost=true
    - name: List Release
      run: ls ../dotnet-webapp
    - name: Prepare temporary folder for archive
      run: mkdir ./deploy_net8_linux-x64
    - name: Copy built artefacts
      run: cp -rv ../dotnet-webapp/* deploy_net8_linux-x64
    - name: Compress
      uses: TonyBogdanov/zip@1.0
      with:
        args: zip -r ./deploy_net8_linux-x64.zip ./deploy_net8_linux-x64 -i *
    - name: SCP using password
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.TAGGLOOIM_HOST }}
        username: ${{ secrets.TAGGLOOIM_DEPLOY_USERNAME }}
        password: ${{ secrets.TAGGLOOIM_DEPLOY_PASSWORD }}
        port: ${{ secrets.TAGGLOOIM_PORT }}
        source: "deploy_net8_linux-x64.zip"
        target: taggloo.im
    - name: Output Run ID
      run: echo ${{ github.run_id }}
    - name: Output Run Number
      run: echo ${{ github.run_number }}
    - name: Output Run Attempt
      run: echo ${{ github.run_attempt }}
    - name: Host step ONE Prepare work area
      uses: cross-the-world/ssh-pipeline@master
      with:
        host: ${{ secrets.TAGGLOOIM_HOST }}
        user: ${{ secrets.TAGGLOOIM_DEPLOY_USERNAME }}
        pass: ${{ secrets.TAGGLOOIM_DEPLOY_PASSWORD }}
        port: ${{ secrets.TAGGLOOIM_PORT }}
        connect_timeout: 10s
        script: |
          ~/taggloo.im/scripts/01-prepare-workarea.sh
